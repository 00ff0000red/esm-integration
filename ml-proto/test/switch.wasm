;; (c) 2015 Andreas Rossberg

(module
  ;; Statement switch
  (func $stmt (param $i i32) (result i32)
    (local $j i32)
    (setlocal $j (const.i32 100))
    (label
      (switch.i32 (getlocal $i)
        (case 0 (return (getlocal $i)))
        (case 1 (nop) fallthru)
        (case 2)  ;; implicit fallthru
        (case 3 (setlocal $j (neg.i32 (getlocal $i))) (break))
        (case 4 (break))
        (case 5 (setlocal $j (const.i32 101)))
        (case 6 (setlocal $j (const.i32 101)) fallthru)
        (;default;) (setlocal $j (const.i32 102))
      )
    )
    (return (getlocal $j))
  )

  ;; Expression switch
  (func $expr (param $i i64) (result i64)
    (local $j i64)
    (setlocal $j (const.i64 100))
    (return
      (label $l
        (switch.i64 (getlocal $i)
          (case 0 (return (getlocal $i)))
          (case 1 (nop) fallthru)
          (case 2)  ;; implicit fallthru
          (case 3 (break $l (neg.i64 (getlocal $i))))
          (case 6 (setlocal $j (const.i64 101)) fallthru)
          (;default;) (getlocal $j)
        )
      )
    )
  )

  (export "stmt" $stmt)
  (export "expr" $expr)
)

(invoke "stmt" (const.i32 0))  ;; 0 : i32
(invoke "stmt" (const.i32 1))  ;; -1 : i32
(invoke "stmt" (const.i32 2))  ;; -2 : i32
(invoke "stmt" (const.i32 3))  ;; -3 : i32
(invoke "stmt" (const.i32 4))  ;; 100 : i32
(invoke "stmt" (const.i32 5))  ;; 101 : i32
(invoke "stmt" (const.i32 6))  ;; 102 : i32
(invoke "stmt" (const.i32 7))  ;; 102 : i32
(invoke "stmt" (const.i32 -10))  ;; 102 : i32

(invoke "expr" (const.i64 0))  ;; 0 : i64
(invoke "expr" (const.i64 1))  ;; -1 : i64
(invoke "expr" (const.i64 2))  ;; -2 : i64
(invoke "expr" (const.i64 3))  ;; -3 : i64
(invoke "expr" (const.i64 6))  ;; 101 : i64
(invoke "expr" (const.i64 7))  ;; 100 : i64
(invoke "expr" (const.i64 -10))  ;; 100 : i64
